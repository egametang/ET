//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET
{

public sealed partial class AIMeta :  Bright.Config.BeanBase 
{
    public AIMeta(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Order = _buf.ReadInt();
        Name = _buf.ReadString();
        CanRepeat = _buf.ReadBool();
        Condition = AICondition.Base.DeserializeBase(_buf);
        Execute = AIExecute.Base.DeserializeBase(_buf);
        PostInit();
    }

    public static AIMeta DeserializeAIMeta(ByteBuf _buf)
    {
        return new AIMeta(_buf);
    }

    public int Id { get; private set; }
    public int Order { get; private set; }
    public string Name { get; private set; }
    public bool CanRepeat { get; private set; }
    public AICondition.Base Condition { get; private set; }
    public AIExecute.Base Execute { get; private set; }

    public const int __ID__ = 1930706509;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        Condition?.Resolve(_tables);
        Execute?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        Condition?.TranslateText(translator);
        Execute?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Order:" + Order + ","
        + "Name:" + Name + ","
        + "CanRepeat:" + CanRepeat + ","
        + "Condition:" + Condition + ","
        + "Execute:" + Execute + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
