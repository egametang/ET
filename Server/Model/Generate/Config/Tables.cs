//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using Cysharp.Threading.Tasks;


namespace ET
{
   
public partial class Tables
{
    public Global.TbGlobal TbGlobal {get; private set; }
    public StartServer.TbStartMachine TbStartMachine {get; private set; }
    public StartServer.TbStartProcess TbStartProcess {get; private set; }
    public StartServer.TbStartScene TbStartScene {get; private set; }
    public StartServer.TbStartZone TbStartZone {get; private set; }
    public TbServerInfo TbServerInfo {get; private set; }
    public TbAI TbAI {get; private set; }
    public TbUnit TbUnit {get; private set; }
    public TbClass TbClass {get; private set; }
    public TbFeat TbFeat {get; private set; }
    public TbPower TbPower {get; private set; }
    public TbEquip TbEquip {get; private set; }
    public TbItem TbItem {get; private set; }
    public TbContainer TbContainer {get; private set; }
    public TbRace TbRace {get; private set; }
    public TbSpecialty TbSpecialty {get; private set; }
    public TbBuff TbBuff {get; private set; }
    public TbSkill TbSkill {get; private set; }
    public TbSkillPickTargetWeights TbSkillPickTargetWeights {get; private set; }
    public TbRandomName TbRandomName {get; private set; }
    public TbSystem TbSystem {get; private set; }
    public TbGroupLevel TbGroupLevel {get; private set; }
    public TbLottery TbLottery {get; private set; }

    public Tables() 
    {
    }
    
    public async UniTask LoadAsync(System.Func<string, UniTask<ByteBuf>> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbGlobal = new Global.TbGlobal(await loader("global_tbglobal")); 
        tables.Add("Global.TbGlobal", TbGlobal);
        TbStartMachine = new StartServer.TbStartMachine(await loader("startserver_tbstartmachine")); 
        tables.Add("StartServer.TbStartMachine", TbStartMachine);
        TbStartProcess = new StartServer.TbStartProcess(await loader("startserver_tbstartprocess")); 
        tables.Add("StartServer.TbStartProcess", TbStartProcess);
        TbStartScene = new StartServer.TbStartScene(await loader("startserver_tbstartscene")); 
        tables.Add("StartServer.TbStartScene", TbStartScene);
        TbStartZone = new StartServer.TbStartZone(await loader("startserver_tbstartzone")); 
        tables.Add("StartServer.TbStartZone", TbStartZone);
        TbServerInfo = new TbServerInfo(await loader("tbserverinfo")); 
        tables.Add("TbServerInfo", TbServerInfo);
        TbAI = new TbAI(await loader("tbai")); 
        tables.Add("TbAI", TbAI);
        TbUnit = new TbUnit(await loader("tbunit")); 
        tables.Add("TbUnit", TbUnit);
        TbClass = new TbClass(await loader("tbclass")); 
        tables.Add("TbClass", TbClass);
        TbFeat = new TbFeat(await loader("tbfeat")); 
        tables.Add("TbFeat", TbFeat);
        TbPower = new TbPower(await loader("tbpower")); 
        tables.Add("TbPower", TbPower);
        TbEquip = new TbEquip(await loader("tbequip")); 
        tables.Add("TbEquip", TbEquip);
        TbItem = new TbItem(await loader("tbitem")); 
        tables.Add("TbItem", TbItem);
        TbContainer = new TbContainer(await loader("tbcontainer")); 
        tables.Add("TbContainer", TbContainer);
        TbRace = new TbRace(await loader("tbrace")); 
        tables.Add("TbRace", TbRace);
        TbSpecialty = new TbSpecialty(await loader("tbspecialty")); 
        tables.Add("TbSpecialty", TbSpecialty);
        TbBuff = new TbBuff(await loader("tbbuff")); 
        tables.Add("TbBuff", TbBuff);
        TbSkill = new TbSkill(await loader("tbskill")); 
        tables.Add("TbSkill", TbSkill);
        TbSkillPickTargetWeights = new TbSkillPickTargetWeights(await loader("tbskillpicktargetweights")); 
        tables.Add("TbSkillPickTargetWeights", TbSkillPickTargetWeights);
        TbRandomName = new TbRandomName(await loader("tbrandomname")); 
        tables.Add("TbRandomName", TbRandomName);
        TbSystem = new TbSystem(await loader("tbsystem")); 
        tables.Add("TbSystem", TbSystem);
        TbGroupLevel = new TbGroupLevel(await loader("tbgrouplevel")); 
        tables.Add("TbGroupLevel", TbGroupLevel);
        TbLottery = new TbLottery(await loader("tblottery")); 
        tables.Add("TbLottery", TbLottery);

        TbGlobal.Resolve(tables); 
        TbStartMachine.Resolve(tables); 
        TbStartProcess.Resolve(tables); 
        TbStartScene.Resolve(tables); 
        TbStartZone.Resolve(tables); 
        TbServerInfo.Resolve(tables); 
        TbAI.Resolve(tables); 
        TbUnit.Resolve(tables); 
        TbClass.Resolve(tables); 
        TbFeat.Resolve(tables); 
        TbPower.Resolve(tables); 
        TbEquip.Resolve(tables); 
        TbItem.Resolve(tables); 
        TbContainer.Resolve(tables); 
        TbRace.Resolve(tables); 
        TbSpecialty.Resolve(tables); 
        TbBuff.Resolve(tables); 
        TbSkill.Resolve(tables); 
        TbSkillPickTargetWeights.Resolve(tables); 
        TbRandomName.Resolve(tables); 
        TbSystem.Resolve(tables); 
        TbGroupLevel.Resolve(tables); 
        TbLottery.Resolve(tables); 
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbGlobal.TranslateText(translator); 
        TbStartMachine.TranslateText(translator); 
        TbStartProcess.TranslateText(translator); 
        TbStartScene.TranslateText(translator); 
        TbStartZone.TranslateText(translator); 
        TbServerInfo.TranslateText(translator); 
        TbAI.TranslateText(translator); 
        TbUnit.TranslateText(translator); 
        TbClass.TranslateText(translator); 
        TbFeat.TranslateText(translator); 
        TbPower.TranslateText(translator); 
        TbEquip.TranslateText(translator); 
        TbItem.TranslateText(translator); 
        TbContainer.TranslateText(translator); 
        TbRace.TranslateText(translator); 
        TbSpecialty.TranslateText(translator); 
        TbBuff.TranslateText(translator); 
        TbSkill.TranslateText(translator); 
        TbSkillPickTargetWeights.TranslateText(translator); 
        TbRandomName.TranslateText(translator); 
        TbSystem.TranslateText(translator); 
        TbGroupLevel.TranslateText(translator); 
        TbLottery.TranslateText(translator); 
    }
}

}
