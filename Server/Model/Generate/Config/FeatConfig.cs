//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET
{

public sealed partial class FeatConfig :  Bright.Config.BeanBase 
{
    public FeatConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        ConditionRace = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ConditionAttribute = new System.Collections.Generic.List<id_value>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { id_value _e0;  _e0 = id_value.Deserializeid_value(_buf); ConditionAttribute.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ConditionFeature = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); ConditionFeature.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);BuffId = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); BuffId.Add(_e0);}}
        Probability = _buf.ReadInt();
        PostInit();
    }

    public static FeatConfig DeserializeFeatConfig(ByteBuf _buf)
    {
        return new FeatConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 前置条件：种族
    /// </summary>
    public int ConditionRace { get; private set; }
    /// <summary>
    /// 前置条件：属性
    /// </summary>
    public System.Collections.Generic.List<id_value> ConditionAttribute { get; private set; }
    /// <summary>
    /// 前置条件：种族特性
    /// </summary>
    public System.Collections.Generic.List<int> ConditionFeature { get; private set; }
    /// <summary>
    /// 关联BuffID
    /// </summary>
    public System.Collections.Generic.List<int> BuffId { get; private set; }
    /// <summary>
    /// 比重，影响酒馆中出现的几率
    /// </summary>
    public int Probability { get; private set; }

    public const int __ID__ = 408814388;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in ConditionAttribute) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in ConditionAttribute) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "ConditionRace:" + ConditionRace + ","
        + "ConditionAttribute:" + Bright.Common.StringUtil.CollectionToString(ConditionAttribute) + ","
        + "ConditionFeature:" + Bright.Common.StringUtil.CollectionToString(ConditionFeature) + ","
        + "BuffId:" + Bright.Common.StringUtil.CollectionToString(BuffId) + ","
        + "Probability:" + Probability + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
