//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET
{

public sealed partial class ClassConfig :  Bright.Config.BeanBase 
{
    public ClassConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        PowerType = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);WeaponProficiency = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); WeaponProficiency.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ArmorProficiency = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); ArmorProficiency.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ShieldProficiency = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); ShieldProficiency.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributeChange = new System.Collections.Generic.List<id_value>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { id_value _e0;  _e0 = id_value.Deserializeid_value(_buf); AttributeChange.Add(_e0);}}
        HpInit = _buf.ReadInt();
        HpLevelup = _buf.ReadInt();
        HealingSuges = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillLottery = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); SkillLottery.Add(_e0);}}
        SkillChoose = _buf.ReadInt();
        Probability = _buf.ReadInt();
        PostInit();
    }

    public static ClassConfig DeserializeClassConfig(ByteBuf _buf)
    {
        return new ClassConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 本源之力
    /// </summary>
    public int PowerType { get; private set; }
    /// <summary>
    /// 擅长武器
    /// </summary>
    public System.Collections.Generic.List<int> WeaponProficiency { get; private set; }
    /// <summary>
    /// 擅长护甲
    /// </summary>
    public System.Collections.Generic.List<int> ArmorProficiency { get; private set; }
    /// <summary>
    /// 擅长盾牌
    /// </summary>
    public System.Collections.Generic.List<int> ShieldProficiency { get; private set; }
    /// <summary>
    /// 属性调整
    /// </summary>
    public System.Collections.Generic.List<id_value> AttributeChange { get; private set; }
    /// <summary>
    /// 生命初始值<br/>配置基础值+体质属性
    /// </summary>
    public int HpInit { get; private set; }
    /// <summary>
    /// 生命成长值
    /// </summary>
    public int HpLevelup { get; private set; }
    /// <summary>
    /// 自疗次数<br/>配置基础值+体质调整值
    /// </summary>
    public int HealingSuges { get; private set; }
    /// <summary>
    /// 技能随机池
    /// </summary>
    public System.Collections.Generic.List<int> SkillLottery { get; private set; }
    /// <summary>
    /// 技能受训数量
    /// </summary>
    public int SkillChoose { get; private set; }
    /// <summary>
    /// 比重，影响酒馆中出现的几率
    /// </summary>
    public int Probability { get; private set; }

    public const int __ID__ = 452773562;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in AttributeChange) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in AttributeChange) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "PowerType:" + PowerType + ","
        + "WeaponProficiency:" + Bright.Common.StringUtil.CollectionToString(WeaponProficiency) + ","
        + "ArmorProficiency:" + Bright.Common.StringUtil.CollectionToString(ArmorProficiency) + ","
        + "ShieldProficiency:" + Bright.Common.StringUtil.CollectionToString(ShieldProficiency) + ","
        + "AttributeChange:" + Bright.Common.StringUtil.CollectionToString(AttributeChange) + ","
        + "HpInit:" + HpInit + ","
        + "HpLevelup:" + HpLevelup + ","
        + "HealingSuges:" + HealingSuges + ","
        + "SkillLottery:" + Bright.Common.StringUtil.CollectionToString(SkillLottery) + ","
        + "SkillChoose:" + SkillChoose + ","
        + "Probability:" + Probability + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
