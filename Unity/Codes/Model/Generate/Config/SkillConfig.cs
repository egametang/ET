//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET
{

public sealed partial class SkillConfig :  Bright.Config.BeanBase 
{
    public SkillConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Priority = _buf.ReadInt();
        PickAi = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Consumes = new System.Collections.Generic.List<ConsumeInfo>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { ConsumeInfo _e0;  _e0 = ConsumeInfo.DeserializeConsumeInfo(_buf); Consumes.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Operations = new System.Collections.Generic.List<PowerOperation>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { PowerOperation _e0;  _e0 = PowerOperation.DeserializePowerOperation(_buf); Operations.Add(_e0);}}
        Desc = _buf.ReadString();
        SkillRange = (SkillRange)_buf.ReadInt();
        Cooldown = _buf.ReadInt();
        IsPassive = _buf.ReadBool();
        PostInit();
    }

    public static SkillConfig DeserializeSkillConfig(ByteBuf _buf)
    {
        return new SkillConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 优先级
    /// </summary>
    public int Priority { get; private set; }
    /// <summary>
    /// 目标策略
    /// </summary>
    public int PickAi { get; private set; }
    public AIConfig PickAi_Ref { get; private set; }
    /// <summary>
    /// 消耗类型
    /// </summary>
    public System.Collections.Generic.List<ConsumeInfo> Consumes { get; private set; }
    /// <summary>
    /// 操作
    /// </summary>
    public System.Collections.Generic.List<PowerOperation> Operations { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 技能距离
    /// </summary>
    public SkillRange SkillRange { get; private set; }
    /// <summary>
    /// 冷却时间
    /// </summary>
    public int Cooldown { get; private set; }
    /// <summary>
    /// 是不是被动
    /// </summary>
    public bool IsPassive { get; private set; }

    public const int __ID__ = -844226349;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.PickAi_Ref = (_tables["TbAI"] as TbAI).GetOrDefault(PickAi);
        foreach(var _e in Consumes) { _e?.Resolve(_tables); }
        foreach(var _e in Operations) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Consumes) { _e?.TranslateText(translator); }
        foreach(var _e in Operations) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Priority:" + Priority + ","
        + "PickAi:" + PickAi + ","
        + "Consumes:" + Bright.Common.StringUtil.CollectionToString(Consumes) + ","
        + "Operations:" + Bright.Common.StringUtil.CollectionToString(Operations) + ","
        + "Desc:" + Desc + ","
        + "SkillRange:" + SkillRange + ","
        + "Cooldown:" + Cooldown + ","
        + "IsPassive:" + IsPassive + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
