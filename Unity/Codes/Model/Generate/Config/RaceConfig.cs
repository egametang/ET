//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET
{

public sealed partial class RaceConfig :  Bright.Config.BeanBase 
{
    public RaceConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Size = _buf.ReadInt();
        Speed = _buf.ReadInt();
        Vision = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Language = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Language.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AttributeChange = new System.Collections.Generic.List<id_value>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { id_value _e0;  _e0 = id_value.Deserializeid_value(_buf); AttributeChange.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillChange = new System.Collections.Generic.List<id_value>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { id_value _e0;  _e0 = id_value.Deserializeid_value(_buf); SkillChange.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);FeatExtra = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); FeatExtra.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);PowerExtra = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); PowerExtra.Add(_e0);}}
        Desc = _buf.ReadString();
        Probability = _buf.ReadInt();
        PostInit();
    }

    public static RaceConfig DeserializeRaceConfig(ByteBuf _buf)
    {
        return new RaceConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 体型<br/>1=超小型<br/>2=小型<br/>3=中型<br/>4=大型<br/>5=超大型<br/>6=巨型
    /// </summary>
    public int Size { get; private set; }
    /// <summary>
    /// 速度
    /// </summary>
    public int Speed { get; private set; }
    /// <summary>
    /// 视觉<br/>1=普通视觉<br/>2=昏暗视觉<br/>3=黑暗视觉
    /// </summary>
    public int Vision { get; private set; }
    /// <summary>
    /// 语言<br/>格式：[ID,…,ID]<br/>1=通用语<br/>2=龙语<br/>3=精灵语<br/>4=矮人语
    /// </summary>
    public System.Collections.Generic.List<int> Language { get; private set; }
    /// <summary>
    /// 属性调整<br/>格式：[{ID,值},…,{ID,值}]<br/><br/>0=随机
    /// </summary>
    public System.Collections.Generic.List<id_value> AttributeChange { get; private set; }
    /// <summary>
    /// 技能调整<br/>格式：[{ID,值},…,{ID,值}]<br/><br/>ID见Skill表
    /// </summary>
    public System.Collections.Generic.List<id_value> SkillChange { get; private set; }
    /// <summary>
    /// 奖励专长<br/>格式：[ID,…,ID]<br/><br/>ID见Feat表
    /// </summary>
    public System.Collections.Generic.List<int> FeatExtra { get; private set; }
    /// <summary>
    /// 奖励威能<br/>格式：[ID,…,ID]<br/><br/>ID见Power表
    /// </summary>
    public System.Collections.Generic.List<int> PowerExtra { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 比重，影响酒馆中出现的几率
    /// </summary>
    public int Probability { get; private set; }

    public const int __ID__ = -251497069;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in AttributeChange) { _e?.Resolve(_tables); }
        foreach(var _e in SkillChange) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in AttributeChange) { _e?.TranslateText(translator); }
        foreach(var _e in SkillChange) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Size:" + Size + ","
        + "Speed:" + Speed + ","
        + "Vision:" + Vision + ","
        + "Language:" + Bright.Common.StringUtil.CollectionToString(Language) + ","
        + "AttributeChange:" + Bright.Common.StringUtil.CollectionToString(AttributeChange) + ","
        + "SkillChange:" + Bright.Common.StringUtil.CollectionToString(SkillChange) + ","
        + "FeatExtra:" + Bright.Common.StringUtil.CollectionToString(FeatExtra) + ","
        + "PowerExtra:" + Bright.Common.StringUtil.CollectionToString(PowerExtra) + ","
        + "Desc:" + Desc + ","
        + "Probability:" + Probability + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
